// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type HostInitParameters struct {

	// (String) Assigned ID View
	// Assigned ID View
	AssignedIdview *string `json:"assignedIdview,omitempty" tf:"assigned_idview,omitempty"`

	// (String) A description of this host
	// A description of this host
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (Boolean) Skip host's DNS check (A/AAAA) before adding it
	// Skip host's DNS check (A/AAAA) before adding it
	Force *bool `json:"force,omitempty" tf:"force,omitempty"`

	// (String) IP address of the host
	// IP address of the host
	IPAddress *string `json:"ipAddress,omitempty" tf:"ip_address,omitempty"`

	// (List of String) SSH public keys
	// SSH public keys
	Ipasshpubkeys []*string `json:"ipasshpubkeys,omitempty" tf:"ipasshpubkeys,omitempty"`

	// based 2FA authentications. Use 'radius' to allow RADIUS-based 2FA authentications. Other values may be used for custom configurations.
	// Defines a whitelist for Authentication Indicators. Use 'otp' to allow OTP-based 2FA authentications. Use 'radius' to allow RADIUS-based 2FA authentications. Other values may be used for custom configurations.
	KrbAuthIndicators []*string `json:"krbAuthIndicators,omitempty" tf:"krb_auth_indicators,omitempty"`

	// authentication is required for the service
	// Pre-authentication is required for the service
	KrbPreauth *bool `json:"krbPreauth,omitempty" tf:"krb_preauth,omitempty"`

	// (String) Host locality (e.g. 'Baltimore, MD')
	// Host locality (e.g. 'Baltimore, MD')
	Locality *string `json:"locality,omitempty" tf:"locality,omitempty"`

	// (String) Host location (e.g. 'Lab 2')
	// Host location (e.g. 'Lab 2')
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// (List of String) Hardware MAC address(es) on this host
	// Hardware MAC address(es) on this host
	MacAddresses []*string `json:"macAddresses,omitempty" tf:"mac_addresses,omitempty"`

	// (String) Host name
	// Host name
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) Host operating system and version (e.g. 'Fedora 40')
	// Host operating system and version (e.g. 'Fedora 40')
	OperatingSystem *string `json:"operatingSystem,omitempty" tf:"operating_system,omitempty"`

	// (String) Host hardware platform (e.g. 'Lenovo T61')
	// Host hardware platform (e.g. 'Lenovo T61')
	Platform *string `json:"platform,omitempty" tf:"platform,omitempty"`

	// (Boolean) Generate a random password to be used in bulk enrollment
	// Generate a random password to be used in bulk enrollment
	RandomPassword *bool `json:"randomPassword,omitempty" tf:"random_password,omitempty"`

	// (Boolean) Client credentials may be delegated to the service
	// Client credentials may be delegated to the service
	TrustedForDelegation *bool `json:"trustedForDelegation,omitempty" tf:"trusted_for_delegation,omitempty"`

	// (Boolean) The service is allowed to authenticate on behalf of a client
	// The service is allowed to authenticate on behalf of a client
	TrustedToAuthAsDelegate *bool `json:"trustedToAuthAsDelegate,omitempty" tf:"trusted_to_auth_as_delegate,omitempty"`

	// 64 encoded host certificate
	// Base-64 encoded host certificate
	UserCertificates []*string `json:"userCertificates,omitempty" tf:"user_certificates,omitempty"`

	// (List of String) Host category (semantics placed on this attribute are for local interpretation)
	// Host category (semantics placed on this attribute are for local interpretation)
	Userclass []*string `json:"userclass,omitempty" tf:"userclass,omitempty"`

	// (String, Sensitive) Password used in bulk enrollment
	// Password used in bulk enrollment
	UserpasswordSecretRef *v1.SecretKeySelector `json:"userpasswordSecretRef,omitempty" tf:"-"`
}

type HostObservation struct {

	// (String) Assigned ID View
	// Assigned ID View
	AssignedIdview *string `json:"assignedIdview,omitempty" tf:"assigned_idview,omitempty"`

	// (String) A description of this host
	// A description of this host
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (Boolean) Skip host's DNS check (A/AAAA) before adding it
	// Skip host's DNS check (A/AAAA) before adding it
	Force *bool `json:"force,omitempty" tf:"force,omitempty"`

	// (String) ID of the resource
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) IP address of the host
	// IP address of the host
	IPAddress *string `json:"ipAddress,omitempty" tf:"ip_address,omitempty"`

	// (List of String) SSH public keys
	// SSH public keys
	Ipasshpubkeys []*string `json:"ipasshpubkeys,omitempty" tf:"ipasshpubkeys,omitempty"`

	// based 2FA authentications. Use 'radius' to allow RADIUS-based 2FA authentications. Other values may be used for custom configurations.
	// Defines a whitelist for Authentication Indicators. Use 'otp' to allow OTP-based 2FA authentications. Use 'radius' to allow RADIUS-based 2FA authentications. Other values may be used for custom configurations.
	KrbAuthIndicators []*string `json:"krbAuthIndicators,omitempty" tf:"krb_auth_indicators,omitempty"`

	// authentication is required for the service
	// Pre-authentication is required for the service
	KrbPreauth *bool `json:"krbPreauth,omitempty" tf:"krb_preauth,omitempty"`

	// (String) Host locality (e.g. 'Baltimore, MD')
	// Host locality (e.g. 'Baltimore, MD')
	Locality *string `json:"locality,omitempty" tf:"locality,omitempty"`

	// (String) Host location (e.g. 'Lab 2')
	// Host location (e.g. 'Lab 2')
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// (List of String) Hardware MAC address(es) on this host
	// Hardware MAC address(es) on this host
	MacAddresses []*string `json:"macAddresses,omitempty" tf:"mac_addresses,omitempty"`

	// (String) Host name
	// Host name
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) Host operating system and version (e.g. 'Fedora 40')
	// Host operating system and version (e.g. 'Fedora 40')
	OperatingSystem *string `json:"operatingSystem,omitempty" tf:"operating_system,omitempty"`

	// (String) Host hardware platform (e.g. 'Lenovo T61')
	// Host hardware platform (e.g. 'Lenovo T61')
	Platform *string `json:"platform,omitempty" tf:"platform,omitempty"`

	// (Boolean) Generate a random password to be used in bulk enrollment
	// Generate a random password to be used in bulk enrollment
	RandomPassword *bool `json:"randomPassword,omitempty" tf:"random_password,omitempty"`

	// (Boolean) Client credentials may be delegated to the service
	// Client credentials may be delegated to the service
	TrustedForDelegation *bool `json:"trustedForDelegation,omitempty" tf:"trusted_for_delegation,omitempty"`

	// (Boolean) The service is allowed to authenticate on behalf of a client
	// The service is allowed to authenticate on behalf of a client
	TrustedToAuthAsDelegate *bool `json:"trustedToAuthAsDelegate,omitempty" tf:"trusted_to_auth_as_delegate,omitempty"`

	// 64 encoded host certificate
	// Base-64 encoded host certificate
	UserCertificates []*string `json:"userCertificates,omitempty" tf:"user_certificates,omitempty"`

	// (List of String) Host category (semantics placed on this attribute are for local interpretation)
	// Host category (semantics placed on this attribute are for local interpretation)
	Userclass []*string `json:"userclass,omitempty" tf:"userclass,omitempty"`
}

type HostParameters struct {

	// (String) Assigned ID View
	// Assigned ID View
	// +kubebuilder:validation:Optional
	AssignedIdview *string `json:"assignedIdview,omitempty" tf:"assigned_idview,omitempty"`

	// (String) A description of this host
	// A description of this host
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (Boolean) Skip host's DNS check (A/AAAA) before adding it
	// Skip host's DNS check (A/AAAA) before adding it
	// +kubebuilder:validation:Optional
	Force *bool `json:"force,omitempty" tf:"force,omitempty"`

	// (String) IP address of the host
	// IP address of the host
	// +kubebuilder:validation:Optional
	IPAddress *string `json:"ipAddress,omitempty" tf:"ip_address,omitempty"`

	// (List of String) SSH public keys
	// SSH public keys
	// +kubebuilder:validation:Optional
	Ipasshpubkeys []*string `json:"ipasshpubkeys,omitempty" tf:"ipasshpubkeys,omitempty"`

	// based 2FA authentications. Use 'radius' to allow RADIUS-based 2FA authentications. Other values may be used for custom configurations.
	// Defines a whitelist for Authentication Indicators. Use 'otp' to allow OTP-based 2FA authentications. Use 'radius' to allow RADIUS-based 2FA authentications. Other values may be used for custom configurations.
	// +kubebuilder:validation:Optional
	KrbAuthIndicators []*string `json:"krbAuthIndicators,omitempty" tf:"krb_auth_indicators,omitempty"`

	// authentication is required for the service
	// Pre-authentication is required for the service
	// +kubebuilder:validation:Optional
	KrbPreauth *bool `json:"krbPreauth,omitempty" tf:"krb_preauth,omitempty"`

	// (String) Host locality (e.g. 'Baltimore, MD')
	// Host locality (e.g. 'Baltimore, MD')
	// +kubebuilder:validation:Optional
	Locality *string `json:"locality,omitempty" tf:"locality,omitempty"`

	// (String) Host location (e.g. 'Lab 2')
	// Host location (e.g. 'Lab 2')
	// +kubebuilder:validation:Optional
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// (List of String) Hardware MAC address(es) on this host
	// Hardware MAC address(es) on this host
	// +kubebuilder:validation:Optional
	MacAddresses []*string `json:"macAddresses,omitempty" tf:"mac_addresses,omitempty"`

	// (String) Host name
	// Host name
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) Host operating system and version (e.g. 'Fedora 40')
	// Host operating system and version (e.g. 'Fedora 40')
	// +kubebuilder:validation:Optional
	OperatingSystem *string `json:"operatingSystem,omitempty" tf:"operating_system,omitempty"`

	// (String) Host hardware platform (e.g. 'Lenovo T61')
	// Host hardware platform (e.g. 'Lenovo T61')
	// +kubebuilder:validation:Optional
	Platform *string `json:"platform,omitempty" tf:"platform,omitempty"`

	// (Boolean) Generate a random password to be used in bulk enrollment
	// Generate a random password to be used in bulk enrollment
	// +kubebuilder:validation:Optional
	RandomPassword *bool `json:"randomPassword,omitempty" tf:"random_password,omitempty"`

	// (Boolean) Client credentials may be delegated to the service
	// Client credentials may be delegated to the service
	// +kubebuilder:validation:Optional
	TrustedForDelegation *bool `json:"trustedForDelegation,omitempty" tf:"trusted_for_delegation,omitempty"`

	// (Boolean) The service is allowed to authenticate on behalf of a client
	// The service is allowed to authenticate on behalf of a client
	// +kubebuilder:validation:Optional
	TrustedToAuthAsDelegate *bool `json:"trustedToAuthAsDelegate,omitempty" tf:"trusted_to_auth_as_delegate,omitempty"`

	// 64 encoded host certificate
	// Base-64 encoded host certificate
	// +kubebuilder:validation:Optional
	UserCertificates []*string `json:"userCertificates,omitempty" tf:"user_certificates,omitempty"`

	// (List of String) Host category (semantics placed on this attribute are for local interpretation)
	// Host category (semantics placed on this attribute are for local interpretation)
	// +kubebuilder:validation:Optional
	Userclass []*string `json:"userclass,omitempty" tf:"userclass,omitempty"`

	// (String, Sensitive) Password used in bulk enrollment
	// Password used in bulk enrollment
	// +kubebuilder:validation:Optional
	UserpasswordSecretRef *v1.SecretKeySelector `json:"userpasswordSecretRef,omitempty" tf:"-"`
}

// HostSpec defines the desired state of Host
type HostSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     HostParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider HostInitParameters `json:"initProvider,omitempty"`
}

// HostStatus defines the observed state of Host.
type HostStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        HostObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// Host is the Schema for the Hosts API. FreeIPA User resource
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,freeipa}
type Host struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.ipAddress) || (has(self.initProvider) && has(self.initProvider.ipAddress))",message="spec.forProvider.ipAddress is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	Spec   HostSpec   `json:"spec"`
	Status HostStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// HostList contains a list of Hosts
type HostList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Host `json:"items"`
}

// Repository type metadata.
var (
	Host_Kind             = "Host"
	Host_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Host_Kind}.String()
	Host_KindAPIVersion   = Host_Kind + "." + CRDGroupVersion.String()
	Host_GroupVersionKind = CRDGroupVersion.WithKind(Host_Kind)
)

func init() {
	SchemeBuilder.Register(&Host{}, &HostList{})
}
