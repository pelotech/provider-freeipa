// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type RuleRunasgroupMembershipInitParameters struct {

	// (String) Unique identifier to differentiate multiple sudo rule runasgroup membership resources on the same sudo rule. Manadatory for using runasgroups configurations.
	// Unique identifier to differentiate multiple sudo rule runasgroup membership resources on the same sudo rule. Manadatory for using runasgroups configurations.
	Identifier *string `json:"identifier,omitempty" tf:"identifier,omitempty"`

	// (String) Sudo rule name
	// Sudo rule name
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String, Deprecated) deprecated Run As Group to add to the sudo rule. Can be an external group (local group of ipa clients)
	// **deprecated** Run As Group to add to the sudo rule. Can be an external group (local group of ipa clients)
	Runasgroup *string `json:"runasgroup,omitempty" tf:"runasgroup,omitempty"`

	// (List of String) List of Run As Group to add to the sudo rule. Can be an external group (local group of ipa clients)
	// List of Run As Group to add to the sudo rule. Can be an external group (local group of ipa clients)
	Runasgroups []*string `json:"runasgroups,omitempty" tf:"runasgroups,omitempty"`
}

type RuleRunasgroupMembershipObservation struct {

	// (String) ID of the resource
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) Unique identifier to differentiate multiple sudo rule runasgroup membership resources on the same sudo rule. Manadatory for using runasgroups configurations.
	// Unique identifier to differentiate multiple sudo rule runasgroup membership resources on the same sudo rule. Manadatory for using runasgroups configurations.
	Identifier *string `json:"identifier,omitempty" tf:"identifier,omitempty"`

	// (String) Sudo rule name
	// Sudo rule name
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String, Deprecated) deprecated Run As Group to add to the sudo rule. Can be an external group (local group of ipa clients)
	// **deprecated** Run As Group to add to the sudo rule. Can be an external group (local group of ipa clients)
	Runasgroup *string `json:"runasgroup,omitempty" tf:"runasgroup,omitempty"`

	// (List of String) List of Run As Group to add to the sudo rule. Can be an external group (local group of ipa clients)
	// List of Run As Group to add to the sudo rule. Can be an external group (local group of ipa clients)
	Runasgroups []*string `json:"runasgroups,omitempty" tf:"runasgroups,omitempty"`
}

type RuleRunasgroupMembershipParameters struct {

	// (String) Unique identifier to differentiate multiple sudo rule runasgroup membership resources on the same sudo rule. Manadatory for using runasgroups configurations.
	// Unique identifier to differentiate multiple sudo rule runasgroup membership resources on the same sudo rule. Manadatory for using runasgroups configurations.
	// +kubebuilder:validation:Optional
	Identifier *string `json:"identifier,omitempty" tf:"identifier,omitempty"`

	// (String) Sudo rule name
	// Sudo rule name
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String, Deprecated) deprecated Run As Group to add to the sudo rule. Can be an external group (local group of ipa clients)
	// **deprecated** Run As Group to add to the sudo rule. Can be an external group (local group of ipa clients)
	// +kubebuilder:validation:Optional
	Runasgroup *string `json:"runasgroup,omitempty" tf:"runasgroup,omitempty"`

	// (List of String) List of Run As Group to add to the sudo rule. Can be an external group (local group of ipa clients)
	// List of Run As Group to add to the sudo rule. Can be an external group (local group of ipa clients)
	// +kubebuilder:validation:Optional
	Runasgroups []*string `json:"runasgroups,omitempty" tf:"runasgroups,omitempty"`
}

// RuleRunasgroupMembershipSpec defines the desired state of RuleRunasgroupMembership
type RuleRunasgroupMembershipSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     RuleRunasgroupMembershipParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider RuleRunasgroupMembershipInitParameters `json:"initProvider,omitempty"`
}

// RuleRunasgroupMembershipStatus defines the observed state of RuleRunasgroupMembership.
type RuleRunasgroupMembershipStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        RuleRunasgroupMembershipObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// RuleRunasgroupMembership is the Schema for the RuleRunasgroupMemberships API. FreeIPA Sudo rule run as group membership resource
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,freeipa}
type RuleRunasgroupMembership struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	Spec   RuleRunasgroupMembershipSpec   `json:"spec"`
	Status RuleRunasgroupMembershipStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// RuleRunasgroupMembershipList contains a list of RuleRunasgroupMemberships
type RuleRunasgroupMembershipList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []RuleRunasgroupMembership `json:"items"`
}

// Repository type metadata.
var (
	RuleRunasgroupMembership_Kind             = "RuleRunasgroupMembership"
	RuleRunasgroupMembership_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: RuleRunasgroupMembership_Kind}.String()
	RuleRunasgroupMembership_KindAPIVersion   = RuleRunasgroupMembership_Kind + "." + CRDGroupVersion.String()
	RuleRunasgroupMembership_GroupVersionKind = CRDGroupVersion.WithKind(RuleRunasgroupMembership_Kind)
)

func init() {
	SchemeBuilder.Register(&RuleRunasgroupMembership{}, &RuleRunasgroupMembershipList{})
}
