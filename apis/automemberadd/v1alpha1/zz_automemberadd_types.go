// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AutomemberaddInitParameters struct {

	// (List of String) Add an attribute/value pair. Format is attr=value. The attribute must be part of the schema.
	// Add an attribute/value pair. Format is attr=value. The attribute must be part of the schema.
	Addattr []*string `json:"addattr,omitempty" tf:"addattr,omitempty"`

	// (String) Automember rule description
	// Automember rule description
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (String) Automember rule name
	// Automember rule name
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (List of String) Set an attribute to a name/value pair. Format is attr=value.
	// Set an attribute to a name/value pair. Format is attr=value.
	Setattr []*string `json:"setattr,omitempty" tf:"setattr,omitempty"`

	// (String) Automember rule type
	// Automember rule type
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type AutomemberaddObservation struct {

	// (List of String) Add an attribute/value pair. Format is attr=value. The attribute must be part of the schema.
	// Add an attribute/value pair. Format is attr=value. The attribute must be part of the schema.
	Addattr []*string `json:"addattr,omitempty" tf:"addattr,omitempty"`

	// (String) Automember rule description
	// Automember rule description
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (String) ID of the resource
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) Automember rule name
	// Automember rule name
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (List of String) Set an attribute to a name/value pair. Format is attr=value.
	// Set an attribute to a name/value pair. Format is attr=value.
	Setattr []*string `json:"setattr,omitempty" tf:"setattr,omitempty"`

	// (String) Automember rule type
	// Automember rule type
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type AutomemberaddParameters struct {

	// (List of String) Add an attribute/value pair. Format is attr=value. The attribute must be part of the schema.
	// Add an attribute/value pair. Format is attr=value. The attribute must be part of the schema.
	// +kubebuilder:validation:Optional
	Addattr []*string `json:"addattr,omitempty" tf:"addattr,omitempty"`

	// (String) Automember rule description
	// Automember rule description
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (String) Automember rule name
	// Automember rule name
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (List of String) Set an attribute to a name/value pair. Format is attr=value.
	// Set an attribute to a name/value pair. Format is attr=value.
	// +kubebuilder:validation:Optional
	Setattr []*string `json:"setattr,omitempty" tf:"setattr,omitempty"`

	// (String) Automember rule type
	// Automember rule type
	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

// AutomemberaddSpec defines the desired state of Automemberadd
type AutomemberaddSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     AutomemberaddParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider AutomemberaddInitParameters `json:"initProvider,omitempty"`
}

// AutomemberaddStatus defines the observed state of Automemberadd.
type AutomemberaddStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        AutomemberaddObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// Automemberadd is the Schema for the Automemberadds API. FreeIPA Automember resource
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,freeipa}
type Automemberadd struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.type) || (has(self.initProvider) && has(self.initProvider.type))",message="spec.forProvider.type is a required parameter"
	Spec   AutomemberaddSpec   `json:"spec"`
	Status AutomemberaddStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// AutomemberaddList contains a list of Automemberadds
type AutomemberaddList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Automemberadd `json:"items"`
}

// Repository type metadata.
var (
	Automemberadd_Kind             = "Automemberadd"
	Automemberadd_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Automemberadd_Kind}.String()
	Automemberadd_KindAPIVersion   = Automemberadd_Kind + "." + CRDGroupVersion.String()
	Automemberadd_GroupVersionKind = CRDGroupVersion.WithKind(Automemberadd_Kind)
)

func init() {
	SchemeBuilder.Register(&Automemberadd{}, &AutomemberaddList{})
}
