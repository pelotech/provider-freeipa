//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Zone) DeepCopyInto(out *Zone) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Zone.
func (in *Zone) DeepCopy() *Zone {
	if in == nil {
		return nil
	}
	out := new(Zone)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Zone) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZoneInitParameters) DeepCopyInto(out *ZoneInitParameters) {
	*out = *in
	if in.AdminEmailAddress != nil {
		in, out := &in.AdminEmailAddress, &out.AdminEmailAddress
		*out = new(string)
		**out = **in
	}
	if in.AllowInlineDNSSECSigning != nil {
		in, out := &in.AllowInlineDNSSECSigning, &out.AllowInlineDNSSECSigning
		*out = new(bool)
		**out = **in
	}
	if in.AllowPrtSync != nil {
		in, out := &in.AllowPrtSync, &out.AllowPrtSync
		*out = new(bool)
		**out = **in
	}
	if in.AllowQuery != nil {
		in, out := &in.AllowQuery, &out.AllowQuery
		*out = new(string)
		**out = **in
	}
	if in.AllowTransfer != nil {
		in, out := &in.AllowTransfer, &out.AllowTransfer
		*out = new(string)
		**out = **in
	}
	if in.AuthoritativeNameserver != nil {
		in, out := &in.AuthoritativeNameserver, &out.AuthoritativeNameserver
		*out = new(string)
		**out = **in
	}
	if in.BindUpdatePolicy != nil {
		in, out := &in.BindUpdatePolicy, &out.BindUpdatePolicy
		*out = new(string)
		**out = **in
	}
	if in.DefaultTTL != nil {
		in, out := &in.DefaultTTL, &out.DefaultTTL
		*out = new(float64)
		**out = **in
	}
	if in.DisableZone != nil {
		in, out := &in.DisableZone, &out.DisableZone
		*out = new(bool)
		**out = **in
	}
	if in.DynamicUpdates != nil {
		in, out := &in.DynamicUpdates, &out.DynamicUpdates
		*out = new(bool)
		**out = **in
	}
	if in.IsReverseZone != nil {
		in, out := &in.IsReverseZone, &out.IsReverseZone
		*out = new(bool)
		**out = **in
	}
	if in.Nsec3ParamRecord != nil {
		in, out := &in.Nsec3ParamRecord, &out.Nsec3ParamRecord
		*out = new(string)
		**out = **in
	}
	if in.SkipNameserverCheck != nil {
		in, out := &in.SkipNameserverCheck, &out.SkipNameserverCheck
		*out = new(bool)
		**out = **in
	}
	if in.SkipOverlapCheck != nil {
		in, out := &in.SkipOverlapCheck, &out.SkipOverlapCheck
		*out = new(bool)
		**out = **in
	}
	if in.SoaExpire != nil {
		in, out := &in.SoaExpire, &out.SoaExpire
		*out = new(float64)
		**out = **in
	}
	if in.SoaMinimum != nil {
		in, out := &in.SoaMinimum, &out.SoaMinimum
		*out = new(float64)
		**out = **in
	}
	if in.SoaRefresh != nil {
		in, out := &in.SoaRefresh, &out.SoaRefresh
		*out = new(float64)
		**out = **in
	}
	if in.SoaRetry != nil {
		in, out := &in.SoaRetry, &out.SoaRetry
		*out = new(float64)
		**out = **in
	}
	if in.TTL != nil {
		in, out := &in.TTL, &out.TTL
		*out = new(float64)
		**out = **in
	}
	if in.ZoneForwarders != nil {
		in, out := &in.ZoneForwarders, &out.ZoneForwarders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ZoneName != nil {
		in, out := &in.ZoneName, &out.ZoneName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZoneInitParameters.
func (in *ZoneInitParameters) DeepCopy() *ZoneInitParameters {
	if in == nil {
		return nil
	}
	out := new(ZoneInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZoneList) DeepCopyInto(out *ZoneList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Zone, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZoneList.
func (in *ZoneList) DeepCopy() *ZoneList {
	if in == nil {
		return nil
	}
	out := new(ZoneList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ZoneList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZoneObservation) DeepCopyInto(out *ZoneObservation) {
	*out = *in
	if in.AdminEmailAddress != nil {
		in, out := &in.AdminEmailAddress, &out.AdminEmailAddress
		*out = new(string)
		**out = **in
	}
	if in.AllowInlineDNSSECSigning != nil {
		in, out := &in.AllowInlineDNSSECSigning, &out.AllowInlineDNSSECSigning
		*out = new(bool)
		**out = **in
	}
	if in.AllowPrtSync != nil {
		in, out := &in.AllowPrtSync, &out.AllowPrtSync
		*out = new(bool)
		**out = **in
	}
	if in.AllowQuery != nil {
		in, out := &in.AllowQuery, &out.AllowQuery
		*out = new(string)
		**out = **in
	}
	if in.AllowTransfer != nil {
		in, out := &in.AllowTransfer, &out.AllowTransfer
		*out = new(string)
		**out = **in
	}
	if in.AuthoritativeNameserver != nil {
		in, out := &in.AuthoritativeNameserver, &out.AuthoritativeNameserver
		*out = new(string)
		**out = **in
	}
	if in.BindUpdatePolicy != nil {
		in, out := &in.BindUpdatePolicy, &out.BindUpdatePolicy
		*out = new(string)
		**out = **in
	}
	if in.ComputedZoneName != nil {
		in, out := &in.ComputedZoneName, &out.ComputedZoneName
		*out = new(string)
		**out = **in
	}
	if in.DefaultTTL != nil {
		in, out := &in.DefaultTTL, &out.DefaultTTL
		*out = new(float64)
		**out = **in
	}
	if in.DisableZone != nil {
		in, out := &in.DisableZone, &out.DisableZone
		*out = new(bool)
		**out = **in
	}
	if in.DynamicUpdates != nil {
		in, out := &in.DynamicUpdates, &out.DynamicUpdates
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IsReverseZone != nil {
		in, out := &in.IsReverseZone, &out.IsReverseZone
		*out = new(bool)
		**out = **in
	}
	if in.Nsec3ParamRecord != nil {
		in, out := &in.Nsec3ParamRecord, &out.Nsec3ParamRecord
		*out = new(string)
		**out = **in
	}
	if in.SkipNameserverCheck != nil {
		in, out := &in.SkipNameserverCheck, &out.SkipNameserverCheck
		*out = new(bool)
		**out = **in
	}
	if in.SkipOverlapCheck != nil {
		in, out := &in.SkipOverlapCheck, &out.SkipOverlapCheck
		*out = new(bool)
		**out = **in
	}
	if in.SoaExpire != nil {
		in, out := &in.SoaExpire, &out.SoaExpire
		*out = new(float64)
		**out = **in
	}
	if in.SoaMinimum != nil {
		in, out := &in.SoaMinimum, &out.SoaMinimum
		*out = new(float64)
		**out = **in
	}
	if in.SoaRefresh != nil {
		in, out := &in.SoaRefresh, &out.SoaRefresh
		*out = new(float64)
		**out = **in
	}
	if in.SoaRetry != nil {
		in, out := &in.SoaRetry, &out.SoaRetry
		*out = new(float64)
		**out = **in
	}
	if in.TTL != nil {
		in, out := &in.TTL, &out.TTL
		*out = new(float64)
		**out = **in
	}
	if in.ZoneForwarders != nil {
		in, out := &in.ZoneForwarders, &out.ZoneForwarders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ZoneName != nil {
		in, out := &in.ZoneName, &out.ZoneName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZoneObservation.
func (in *ZoneObservation) DeepCopy() *ZoneObservation {
	if in == nil {
		return nil
	}
	out := new(ZoneObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZoneParameters) DeepCopyInto(out *ZoneParameters) {
	*out = *in
	if in.AdminEmailAddress != nil {
		in, out := &in.AdminEmailAddress, &out.AdminEmailAddress
		*out = new(string)
		**out = **in
	}
	if in.AllowInlineDNSSECSigning != nil {
		in, out := &in.AllowInlineDNSSECSigning, &out.AllowInlineDNSSECSigning
		*out = new(bool)
		**out = **in
	}
	if in.AllowPrtSync != nil {
		in, out := &in.AllowPrtSync, &out.AllowPrtSync
		*out = new(bool)
		**out = **in
	}
	if in.AllowQuery != nil {
		in, out := &in.AllowQuery, &out.AllowQuery
		*out = new(string)
		**out = **in
	}
	if in.AllowTransfer != nil {
		in, out := &in.AllowTransfer, &out.AllowTransfer
		*out = new(string)
		**out = **in
	}
	if in.AuthoritativeNameserver != nil {
		in, out := &in.AuthoritativeNameserver, &out.AuthoritativeNameserver
		*out = new(string)
		**out = **in
	}
	if in.BindUpdatePolicy != nil {
		in, out := &in.BindUpdatePolicy, &out.BindUpdatePolicy
		*out = new(string)
		**out = **in
	}
	if in.DefaultTTL != nil {
		in, out := &in.DefaultTTL, &out.DefaultTTL
		*out = new(float64)
		**out = **in
	}
	if in.DisableZone != nil {
		in, out := &in.DisableZone, &out.DisableZone
		*out = new(bool)
		**out = **in
	}
	if in.DynamicUpdates != nil {
		in, out := &in.DynamicUpdates, &out.DynamicUpdates
		*out = new(bool)
		**out = **in
	}
	if in.IsReverseZone != nil {
		in, out := &in.IsReverseZone, &out.IsReverseZone
		*out = new(bool)
		**out = **in
	}
	if in.Nsec3ParamRecord != nil {
		in, out := &in.Nsec3ParamRecord, &out.Nsec3ParamRecord
		*out = new(string)
		**out = **in
	}
	if in.SkipNameserverCheck != nil {
		in, out := &in.SkipNameserverCheck, &out.SkipNameserverCheck
		*out = new(bool)
		**out = **in
	}
	if in.SkipOverlapCheck != nil {
		in, out := &in.SkipOverlapCheck, &out.SkipOverlapCheck
		*out = new(bool)
		**out = **in
	}
	if in.SoaExpire != nil {
		in, out := &in.SoaExpire, &out.SoaExpire
		*out = new(float64)
		**out = **in
	}
	if in.SoaMinimum != nil {
		in, out := &in.SoaMinimum, &out.SoaMinimum
		*out = new(float64)
		**out = **in
	}
	if in.SoaRefresh != nil {
		in, out := &in.SoaRefresh, &out.SoaRefresh
		*out = new(float64)
		**out = **in
	}
	if in.SoaRetry != nil {
		in, out := &in.SoaRetry, &out.SoaRetry
		*out = new(float64)
		**out = **in
	}
	if in.TTL != nil {
		in, out := &in.TTL, &out.TTL
		*out = new(float64)
		**out = **in
	}
	if in.ZoneForwarders != nil {
		in, out := &in.ZoneForwarders, &out.ZoneForwarders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ZoneName != nil {
		in, out := &in.ZoneName, &out.ZoneName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZoneParameters.
func (in *ZoneParameters) DeepCopy() *ZoneParameters {
	if in == nil {
		return nil
	}
	out := new(ZoneParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZoneSpec) DeepCopyInto(out *ZoneSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZoneSpec.
func (in *ZoneSpec) DeepCopy() *ZoneSpec {
	if in == nil {
		return nil
	}
	out := new(ZoneSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZoneStatus) DeepCopyInto(out *ZoneStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZoneStatus.
func (in *ZoneStatus) DeepCopy() *ZoneStatus {
	if in == nil {
		return nil
	}
	out := new(ZoneStatus)
	in.DeepCopyInto(out)
	return out
}
