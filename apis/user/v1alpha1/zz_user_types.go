// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type UserInitParameters struct {

	// (Boolean) Account disabled
	// Account disabled
	AccountDisabled *bool `json:"accountDisabled,omitempty" tf:"account_disabled,omitempty"`

	// (List of String) Car Licenses
	// Car Licenses
	CarLicense []*string `json:"carLicense,omitempty" tf:"car_license,omitempty"`

	// (String) City
	// City
	City *string `json:"city,omitempty" tf:"city,omitempty"`

	// (String) Display name
	// Display name
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// (List of String) Email address
	// Email address
	EmailAddress []*string `json:"emailAddress,omitempty" tf:"email_address,omitempty"`

	// (String) Employee Number
	// Employee Number
	EmployeeNumber *string `json:"employeeNumber,omitempty" tf:"employee_number,omitempty"`

	// (String) Employee Type
	// Employee Type
	EmployeeType *string `json:"employeeType,omitempty" tf:"employee_type,omitempty"`

	// (String) First name
	// First name
	FirstName *string `json:"firstName,omitempty" tf:"first_name,omitempty"`

	// (String) Full name
	// Full name
	FullName *string `json:"fullName,omitempty" tf:"full_name,omitempty"`

	// (Number) Group ID Number
	// Group ID Number
	GIDNumber *float64 `json:"gidNumber,omitempty" tf:"gid_number,omitempty"`

	// (String) GECOS
	// GECOS
	Gecos *string `json:"gecos,omitempty" tf:"gecos,omitempty"`

	// (String) Home Directory
	// Home Directory
	HomeDirectory *string `json:"homeDirectory,omitempty" tf:"home_directory,omitempty"`

	// (String) Initials
	// Initials
	Initials *string `json:"initials,omitempty" tf:"initials,omitempty"`

	// (String) Job Title
	// Job Title
	JobTitle *string `json:"jobTitle,omitempty" tf:"job_title,omitempty"`

	// MM-DDTHH:MM:SSZ)
	// User password expiration [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.8) format (see [RFC3339 time string](https://tools.ietf.org/html/rfc3339#section-5.8) e.g., `YYYY-MM-DDTHH:MM:SSZ`)
	KrbPasswordExpiration *string `json:"krbPasswordExpiration,omitempty" tf:"krb_password_expiration,omitempty"`

	// MM-DDTHH:MM:SSZ)
	// Kerberos principal expiration [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.8) format (see [RFC3339 time string](https://tools.ietf.org/html/rfc3339#section-5.8) e.g., `YYYY-MM-DDTHH:MM:SSZ`)
	KrbPrincipalExpiration *string `json:"krbPrincipalExpiration,omitempty" tf:"krb_principal_expiration,omitempty"`

	// (List of String) Principal alias
	// Principal alias
	KrbPrincipalName []*string `json:"krbPrincipalName,omitempty" tf:"krb_principal_name,omitempty"`

	// (String) Last name
	// Last name
	LastName *string `json:"lastName,omitempty" tf:"last_name,omitempty"`

	// (String) Login Shell
	// Login Shell
	LoginShell *string `json:"loginShell,omitempty" tf:"login_shell,omitempty"`

	// (String) Manager
	// Manager
	Manager *string `json:"manager,omitempty" tf:"manager,omitempty"`

	// (List of String) Mobile Number
	// Mobile Number
	MobileNumbers []*string `json:"mobileNumbers,omitempty" tf:"mobile_numbers,omitempty"`

	// (String) UID or login
	// UID or login
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) Org. Unit
	// Org. Unit
	OrganisationUnit *string `json:"organisationUnit,omitempty" tf:"organisation_unit,omitempty"`

	// (String) Postal code
	// Postal code
	PostalCode *string `json:"postalCode,omitempty" tf:"postal_code,omitempty"`

	// (String) Preferred Language
	// Preferred Language
	PreferredLanguage *string `json:"preferredLanguage,omitempty" tf:"preferred_language,omitempty"`

	// (String) Province/State/Country
	// Province/State/Country
	Province *string `json:"province,omitempty" tf:"province,omitempty"`

	// (Boolean) Generate a random user password
	// Generate a random user password
	RandomPassword *bool `json:"randomPassword,omitempty" tf:"random_password,omitempty"`

	// (List of String) List of SSH public keys
	// List of SSH public keys
	SSHPublicKey []*string `json:"sshPublicKey,omitempty" tf:"ssh_public_key,omitempty"`

	// (String) Street address
	// Street address
	StreetAddress *string `json:"streetAddress,omitempty" tf:"street_address,omitempty"`

	// (List of String) Telephone Number
	// Telephone Number
	TelephoneNumbers []*string `json:"telephoneNumbers,omitempty" tf:"telephone_numbers,omitempty"`

	// (Number) User ID Number (system will assign one if not provided)
	// User ID Number (system will assign one if not provided)
	UIDNumber *float64 `json:"uidNumber,omitempty" tf:"uid_number,omitempty"`

	// (List of String) User category (semantics placed on this attribute are for local interpretation)
	// User category (semantics placed on this attribute are for local interpretation)
	Userclass []*string `json:"userclass,omitempty" tf:"userclass,omitempty"`

	// (String, Sensitive) Prompt to set the user password
	// Prompt to set the user password
	UserpasswordSecretRef *v1.SecretKeySelector `json:"userpasswordSecretRef,omitempty" tf:"-"`
}

type UserObservation struct {

	// (Boolean) Account disabled
	// Account disabled
	AccountDisabled *bool `json:"accountDisabled,omitempty" tf:"account_disabled,omitempty"`

	// (List of String) Car Licenses
	// Car Licenses
	CarLicense []*string `json:"carLicense,omitempty" tf:"car_license,omitempty"`

	// (String) City
	// City
	City *string `json:"city,omitempty" tf:"city,omitempty"`

	// (String) Display name
	// Display name
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// (List of String) Email address
	// Email address
	EmailAddress []*string `json:"emailAddress,omitempty" tf:"email_address,omitempty"`

	// (String) Employee Number
	// Employee Number
	EmployeeNumber *string `json:"employeeNumber,omitempty" tf:"employee_number,omitempty"`

	// (String) Employee Type
	// Employee Type
	EmployeeType *string `json:"employeeType,omitempty" tf:"employee_type,omitempty"`

	// (String) First name
	// First name
	FirstName *string `json:"firstName,omitempty" tf:"first_name,omitempty"`

	// (String) Full name
	// Full name
	FullName *string `json:"fullName,omitempty" tf:"full_name,omitempty"`

	// (Number) Group ID Number
	// Group ID Number
	GIDNumber *float64 `json:"gidNumber,omitempty" tf:"gid_number,omitempty"`

	// (String) GECOS
	// GECOS
	Gecos *string `json:"gecos,omitempty" tf:"gecos,omitempty"`

	// (String) Home Directory
	// Home Directory
	HomeDirectory *string `json:"homeDirectory,omitempty" tf:"home_directory,omitempty"`

	// (String) ID of the resource
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) Initials
	// Initials
	Initials *string `json:"initials,omitempty" tf:"initials,omitempty"`

	// (String) Job Title
	// Job Title
	JobTitle *string `json:"jobTitle,omitempty" tf:"job_title,omitempty"`

	// MM-DDTHH:MM:SSZ)
	// User password expiration [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.8) format (see [RFC3339 time string](https://tools.ietf.org/html/rfc3339#section-5.8) e.g., `YYYY-MM-DDTHH:MM:SSZ`)
	KrbPasswordExpiration *string `json:"krbPasswordExpiration,omitempty" tf:"krb_password_expiration,omitempty"`

	// MM-DDTHH:MM:SSZ)
	// Kerberos principal expiration [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.8) format (see [RFC3339 time string](https://tools.ietf.org/html/rfc3339#section-5.8) e.g., `YYYY-MM-DDTHH:MM:SSZ`)
	KrbPrincipalExpiration *string `json:"krbPrincipalExpiration,omitempty" tf:"krb_principal_expiration,omitempty"`

	// (List of String) Principal alias
	// Principal alias
	KrbPrincipalName []*string `json:"krbPrincipalName,omitempty" tf:"krb_principal_name,omitempty"`

	// (String) Last name
	// Last name
	LastName *string `json:"lastName,omitempty" tf:"last_name,omitempty"`

	// (String) Login Shell
	// Login Shell
	LoginShell *string `json:"loginShell,omitempty" tf:"login_shell,omitempty"`

	// (String) Manager
	// Manager
	Manager *string `json:"manager,omitempty" tf:"manager,omitempty"`

	// (List of String) Mobile Number
	// Mobile Number
	MobileNumbers []*string `json:"mobileNumbers,omitempty" tf:"mobile_numbers,omitempty"`

	// (String) UID or login
	// UID or login
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) Org. Unit
	// Org. Unit
	OrganisationUnit *string `json:"organisationUnit,omitempty" tf:"organisation_unit,omitempty"`

	// (String) Postal code
	// Postal code
	PostalCode *string `json:"postalCode,omitempty" tf:"postal_code,omitempty"`

	// (String) Preferred Language
	// Preferred Language
	PreferredLanguage *string `json:"preferredLanguage,omitempty" tf:"preferred_language,omitempty"`

	// (String) Province/State/Country
	// Province/State/Country
	Province *string `json:"province,omitempty" tf:"province,omitempty"`

	// (Boolean) Generate a random user password
	// Generate a random user password
	RandomPassword *bool `json:"randomPassword,omitempty" tf:"random_password,omitempty"`

	// (List of String) List of SSH public keys
	// List of SSH public keys
	SSHPublicKey []*string `json:"sshPublicKey,omitempty" tf:"ssh_public_key,omitempty"`

	// (String) Street address
	// Street address
	StreetAddress *string `json:"streetAddress,omitempty" tf:"street_address,omitempty"`

	// (List of String) Telephone Number
	// Telephone Number
	TelephoneNumbers []*string `json:"telephoneNumbers,omitempty" tf:"telephone_numbers,omitempty"`

	// (Number) User ID Number (system will assign one if not provided)
	// User ID Number (system will assign one if not provided)
	UIDNumber *float64 `json:"uidNumber,omitempty" tf:"uid_number,omitempty"`

	// (List of String) User category (semantics placed on this attribute are for local interpretation)
	// User category (semantics placed on this attribute are for local interpretation)
	Userclass []*string `json:"userclass,omitempty" tf:"userclass,omitempty"`
}

type UserParameters struct {

	// (Boolean) Account disabled
	// Account disabled
	// +kubebuilder:validation:Optional
	AccountDisabled *bool `json:"accountDisabled,omitempty" tf:"account_disabled,omitempty"`

	// (List of String) Car Licenses
	// Car Licenses
	// +kubebuilder:validation:Optional
	CarLicense []*string `json:"carLicense,omitempty" tf:"car_license,omitempty"`

	// (String) City
	// City
	// +kubebuilder:validation:Optional
	City *string `json:"city,omitempty" tf:"city,omitempty"`

	// (String) Display name
	// Display name
	// +kubebuilder:validation:Optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// (List of String) Email address
	// Email address
	// +kubebuilder:validation:Optional
	EmailAddress []*string `json:"emailAddress,omitempty" tf:"email_address,omitempty"`

	// (String) Employee Number
	// Employee Number
	// +kubebuilder:validation:Optional
	EmployeeNumber *string `json:"employeeNumber,omitempty" tf:"employee_number,omitempty"`

	// (String) Employee Type
	// Employee Type
	// +kubebuilder:validation:Optional
	EmployeeType *string `json:"employeeType,omitempty" tf:"employee_type,omitempty"`

	// (String) First name
	// First name
	// +kubebuilder:validation:Optional
	FirstName *string `json:"firstName,omitempty" tf:"first_name,omitempty"`

	// (String) Full name
	// Full name
	// +kubebuilder:validation:Optional
	FullName *string `json:"fullName,omitempty" tf:"full_name,omitempty"`

	// (Number) Group ID Number
	// Group ID Number
	// +kubebuilder:validation:Optional
	GIDNumber *float64 `json:"gidNumber,omitempty" tf:"gid_number,omitempty"`

	// (String) GECOS
	// GECOS
	// +kubebuilder:validation:Optional
	Gecos *string `json:"gecos,omitempty" tf:"gecos,omitempty"`

	// (String) Home Directory
	// Home Directory
	// +kubebuilder:validation:Optional
	HomeDirectory *string `json:"homeDirectory,omitempty" tf:"home_directory,omitempty"`

	// (String) Initials
	// Initials
	// +kubebuilder:validation:Optional
	Initials *string `json:"initials,omitempty" tf:"initials,omitempty"`

	// (String) Job Title
	// Job Title
	// +kubebuilder:validation:Optional
	JobTitle *string `json:"jobTitle,omitempty" tf:"job_title,omitempty"`

	// MM-DDTHH:MM:SSZ)
	// User password expiration [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.8) format (see [RFC3339 time string](https://tools.ietf.org/html/rfc3339#section-5.8) e.g., `YYYY-MM-DDTHH:MM:SSZ`)
	// +kubebuilder:validation:Optional
	KrbPasswordExpiration *string `json:"krbPasswordExpiration,omitempty" tf:"krb_password_expiration,omitempty"`

	// MM-DDTHH:MM:SSZ)
	// Kerberos principal expiration [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.8) format (see [RFC3339 time string](https://tools.ietf.org/html/rfc3339#section-5.8) e.g., `YYYY-MM-DDTHH:MM:SSZ`)
	// +kubebuilder:validation:Optional
	KrbPrincipalExpiration *string `json:"krbPrincipalExpiration,omitempty" tf:"krb_principal_expiration,omitempty"`

	// (List of String) Principal alias
	// Principal alias
	// +kubebuilder:validation:Optional
	KrbPrincipalName []*string `json:"krbPrincipalName,omitempty" tf:"krb_principal_name,omitempty"`

	// (String) Last name
	// Last name
	// +kubebuilder:validation:Optional
	LastName *string `json:"lastName,omitempty" tf:"last_name,omitempty"`

	// (String) Login Shell
	// Login Shell
	// +kubebuilder:validation:Optional
	LoginShell *string `json:"loginShell,omitempty" tf:"login_shell,omitempty"`

	// (String) Manager
	// Manager
	// +kubebuilder:validation:Optional
	Manager *string `json:"manager,omitempty" tf:"manager,omitempty"`

	// (List of String) Mobile Number
	// Mobile Number
	// +kubebuilder:validation:Optional
	MobileNumbers []*string `json:"mobileNumbers,omitempty" tf:"mobile_numbers,omitempty"`

	// (String) UID or login
	// UID or login
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) Org. Unit
	// Org. Unit
	// +kubebuilder:validation:Optional
	OrganisationUnit *string `json:"organisationUnit,omitempty" tf:"organisation_unit,omitempty"`

	// (String) Postal code
	// Postal code
	// +kubebuilder:validation:Optional
	PostalCode *string `json:"postalCode,omitempty" tf:"postal_code,omitempty"`

	// (String) Preferred Language
	// Preferred Language
	// +kubebuilder:validation:Optional
	PreferredLanguage *string `json:"preferredLanguage,omitempty" tf:"preferred_language,omitempty"`

	// (String) Province/State/Country
	// Province/State/Country
	// +kubebuilder:validation:Optional
	Province *string `json:"province,omitempty" tf:"province,omitempty"`

	// (Boolean) Generate a random user password
	// Generate a random user password
	// +kubebuilder:validation:Optional
	RandomPassword *bool `json:"randomPassword,omitempty" tf:"random_password,omitempty"`

	// (List of String) List of SSH public keys
	// List of SSH public keys
	// +kubebuilder:validation:Optional
	SSHPublicKey []*string `json:"sshPublicKey,omitempty" tf:"ssh_public_key,omitempty"`

	// (String) Street address
	// Street address
	// +kubebuilder:validation:Optional
	StreetAddress *string `json:"streetAddress,omitempty" tf:"street_address,omitempty"`

	// (List of String) Telephone Number
	// Telephone Number
	// +kubebuilder:validation:Optional
	TelephoneNumbers []*string `json:"telephoneNumbers,omitempty" tf:"telephone_numbers,omitempty"`

	// (Number) User ID Number (system will assign one if not provided)
	// User ID Number (system will assign one if not provided)
	// +kubebuilder:validation:Optional
	UIDNumber *float64 `json:"uidNumber,omitempty" tf:"uid_number,omitempty"`

	// (List of String) User category (semantics placed on this attribute are for local interpretation)
	// User category (semantics placed on this attribute are for local interpretation)
	// +kubebuilder:validation:Optional
	Userclass []*string `json:"userclass,omitempty" tf:"userclass,omitempty"`

	// (String, Sensitive) Prompt to set the user password
	// Prompt to set the user password
	// +kubebuilder:validation:Optional
	UserpasswordSecretRef *v1.SecretKeySelector `json:"userpasswordSecretRef,omitempty" tf:"-"`
}

// UserSpec defines the desired state of User
type UserSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     UserParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider UserInitParameters `json:"initProvider,omitempty"`
}

// UserStatus defines the observed state of User.
type UserStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        UserObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// User is the Schema for the Users API. FreeIPA User resource
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,freeipa}
type User struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.firstName) || (has(self.initProvider) && has(self.initProvider.firstName))",message="spec.forProvider.firstName is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.lastName) || (has(self.initProvider) && has(self.initProvider.lastName))",message="spec.forProvider.lastName is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	Spec   UserSpec   `json:"spec"`
	Status UserStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// UserList contains a list of Users
type UserList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []User `json:"items"`
}

// Repository type metadata.
var (
	User_Kind             = "User"
	User_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: User_Kind}.String()
	User_KindAPIVersion   = User_Kind + "." + CRDGroupVersion.String()
	User_GroupVersionKind = CRDGroupVersion.WithKind(User_Kind)
)

func init() {
	SchemeBuilder.Register(&User{}, &UserList{})
}
